set(COMPONENT_NAME spatial)

#add_subdirectory(third_party)

file(GLOB_RECURSE ${COMPONENT_NAME}_SOURCES
  ${CMAKE_CURRENT_SOURCE_DIR}/src/*.cpp
)
if (ENABLE_MODULES)
  file(GLOB_RECURSE ${COMPONENT_NAME}_MODULES
    ${CMAKE_CURRENT_SOURCE_DIR}/include/modules/ams/*.cppm
  )
else()
  file(GLOB_RECURSE ${COMPONENT_NAME}_INCLUDES
    ${CMAKE_CURRENT_SOURCE_DIR}/include/ams/*.hpp
  )
endif()

## Create library
add_library(${COMPONENT_NAME} SHARED
  ${${COMPONENT_NAME}_SOURCES}
)
add_library(${PROJECT_NAME}::${COMPONENT_NAME} ALIAS ${COMPONENT_NAME})
set_target_properties(${COMPONENT_NAME}
  PROPERTIES
    LINKER_LANGUAGE CXX
    VERSION ${${PROJECT_NAME}_VERSION}
)
if(ENABLE_MODULES)
  set(MODULES_LIST " ")
  files_to_interface(VAR MODULES_LIST
    SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}/include/modules
    INSTALL_DIR ${CMAKE_INSTALL_INCLUDEDIR}/include/modules
    FILES ${${COMPONENT_NAME}_MODULES})
  target_sources(${COMPONENT_NAME} PUBLIC ${MODULES_LIST})
else()
target_include_directories(${COMPONENT_NAME}
  PUBLIC
    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
    $<INSTALL_INTERFACE:include>
)
endif()
target_compile_definitions(${COMPONENT_NAME}
  PUBLIC
    AMS_VEC_SWIZZLE_METHODS
)
if(AMS_EXCEPTIONS)
  target_compile_definitions(${COMPONENT_NAME}
    PUBLIC
      AMS_EXCEPTIONS
  )
endif()
target_link_libraries(${COMPONENT_NAME}
  PUBLIC
    ams::core
    #Eigen3::Eigen
)
target_link_options(${COMPONENT_NAME}
  PUBLIC
    $<$<CXX_COMPILER_ID:GNU>:-Wl,--no-undefined>
    $<$<CXX_COMPILER_ID:Clang>:-Wl,-undefined,error>
  )
  
#if(BUILD_TESTS)
#  add_custom_command(TARGET ${COMPONENT_NAME}
#    POST_BUILD
#    COMMAND ${CMAKE_COMMAND} -E copy
#    $<TARGET_FILE:${COMPONENT_NAME}>
#    $<TARGET_FILE_DIR:test_${COMPONENT_NAME}>/$<TARGET_FILE_NAME:${COMPONENT_NAME}>
#  )
#endif()

#### INSTALLATION ####

install(TARGETS ${COMPONENT_NAME} EXPORT ${COMPONENT_NAME}-targets
  COMPONENT ${COMPONENT_NAME}
  LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR}
  INCLUDES DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
  ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR}
  RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR}
  PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}
)
install(EXPORT ${COMPONENT_NAME}-targets
  FILE ${PROJECT_NAME}-${COMPONENT_NAME}-targets.cmake
  NAMESPACE ${PROJECT_NAME}::
  DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME}
  COMPONENT ${COMPONENT_NAME}
)

install(FILES ${${COMPONENT_NAME}_MODULES}
  DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}/modules/${PROJECT_NAME}")
install(FILES ${${COMPONENT_NAME}_INCLUDES}
  DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}/${PROJECT_NAME}")
